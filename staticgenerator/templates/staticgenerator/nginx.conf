# Output of manage.py staticgenerator_http_conf --server=nginx --site={{ domain.pk }}
# Note that this is not guaranteed to fit your actual deployment needs, but is
# instead useful for generating the correct domains & paths your project
# is expecting.
# Makes use of SITE_ID and WEB_ROOT configuration settings.
http {
    # a sample upstream application proxy, for the purposes of providing
    # a reasonable default. Replace with your actual set-up.
    upstream django {
        server {{ domain }}:7000;
    }
    server {
        # Taken from the provided SITE_ID in your project settings.
        server_name  {{ domain }};
        # Taken from the provided WEB_ROOT in your project settings.
        # See the staticgenerator documentation for details.
        root   {{ web_root }};

        location / {
            # Attempt to serve a static HTML file created by
            # django-staticgenerator, if it exists, and stop processing
            if (-f $request_filename/index.html) {
                rewrite (.*) $1/index.html break;
            }

            # If the above rule failed, no staticgenerator cache exists
            # for the current request, so pass it to the upstream application.
            if (!-f $request_filename) {
                proxy_pass http://django;
                break;
            }
        }
    }
}
